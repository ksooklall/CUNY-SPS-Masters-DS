library(shiny)
library(shinythemes)
df <- read.csv('/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/data/cleaned-cdc-mortality-1999-2010-2.csv')
ui <- fluidPage(
theme=shinytheme('cyborg'),
# Application title
headerPanel('CDC Mortality 1999-2010'),
column(3,
selectInput('year', 'Year', unique(df$Year), selected='2010'),
selectInput('icd', 'ICD.Chapter', unique(df$ICD.Chapter), selected='Certain infectious and parasitic diseases'),
selectInput('state', 'State', unique(df$State), selected='NY')),
mainPanel(
plotlyOutput('plot1'),
br(),
plotlyOutput('plot2')
)
)
# Define server logic required to draw a histogram
server <- function(input, output, session) {
# Question 1: As a researcher, you frequently compare mortality rates from particular causes across
# different States. You need a visualization that will let you see (for 2010 only) the crude
# mortality rate, across all States, from one cause (for example, Neoplasms, which are
# effectively cancers). Create a visualization that allows you to rank States by crude mortality
# for each cause of death.
output$plot1 <- renderPlotly({
p1 <- df %>%
filter(Year == input$year, ICD.Chapter == input$icd) %>%
group_by(State) %>%
summarise(crude_rate=sum(Crude.Rate)) %>%
arrange(crude_rate)
plot_ly(p1, x = ~State, y = ~crude_rate, type='bar')
})
# Question 2:
# Often you are asked whether particular States are improving their mortality rates (per cause)
# faster than, or slower than, the national average. Create a visualization that lets your clients
# see this for themselves for one cause of death at the time. Keep in mind that the national
# average should be weighted by the national population.
output$plot2 <- renderPlotly({
sdf <- df %>%
filter(State == input$state, ICD.Chapter == input$icd) %>%
group_by(Year) %>%
summarise(crude_rate=mean(Crude.Rate))
ndf <- df %>% group_by(Year) %>% summarise(national_avg=mean(Crude.Rate))
p2 <- cbind(sdf, ndf) %>% select(c('Year', 'crude_rate', 'national_avg'))
fig <- plot_ly(p2, x =~Year, y = ~crude_rate, name=paste0(input$state, 'Average'), type='scatter', mode='lines')
fig <- fig %>% add_trace(y = ~national_avg, name = 'National Average', mode = 'lines+markers')
})
}
# Run the application
shinyApp(ui = ui, server = server)
---
output: html_document
runtime: shiny
---
library(ggplot2)
library(dplyr)
library(plotly)
library(shiny)
library(shinythemes)
df <- read.csv('/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/data/cleaned-cdc-mortality-1999-2010-2.csv')
ui <- fluidPage(
theme=shinytheme('cyborg'),
# Application title
headerPanel('CDC Mortality 1999-2010'),
column(3,
selectInput('year', 'Year', unique(df$Year), selected='2010'),
selectInput('icd', 'ICD.Chapter', unique(df$ICD.Chapter), selected='Certain infectious and parasitic diseases'),
selectInput('state', 'State', unique(df$State), selected='NY')),
mainPanel(
plotlyOutput('plot1'),
br(),
plotlyOutput('plot2')
)
)
# Define server logic required to draw a histogram
server <- function(input, output, session) {
# Question 1: As a researcher, you frequently compare mortality rates from particular causes across
# different States. You need a visualization that will let you see (for 2010 only) the crude
# mortality rate, across all States, from one cause (for example, Neoplasms, which are
# effectively cancers). Create a visualization that allows you to rank States by crude mortality
# for each cause of death.
output$plot1 <- renderPlotly({
p1 <- df %>%
filter(Year == input$year, ICD.Chapter == input$icd) %>%
group_by(State) %>%
summarise(crude_rate=sum(Crude.Rate))
plot_ly(p1, x = ~State, y = ~crude_rate, type='bar') %>%
layout(title='Title', xaxis=list(categoryorder = "array", categoryarray = ~ reorder(State, crude_rate)))
})
# Question 2:
# Often you are asked whether particular States are improving their mortality rates (per cause)
# faster than, or slower than, the national average. Create a visualization that lets your clients
# see this for themselves for one cause of death at the time. Keep in mind that the national
# average should be weighted by the national population.
output$plot2 <- renderPlotly({
sdf <- df %>%
filter(State == input$state, ICD.Chapter == input$icd) %>%
group_by(Year) %>%
summarise(crude_rate=mean(Crude.Rate))
ndf <- df %>% group_by(Year) %>% summarise(national_avg=mean(Crude.Rate))
p2 <- cbind(sdf, ndf) %>% select(c('Year', 'crude_rate', 'national_avg'))
fig <- plot_ly(p2, x =~Year, y = ~crude_rate, name=paste0(input$state, 'Average'), type='scatter', mode='lines')
fig <- fig %>% add_trace(y = ~national_avg, name = 'National Average', mode = 'lines+markers')
})
}
# Run the application
shinyApp(ui = ui, server = server)
---
output: html_document
runtime: shiny
---
library(ggplot2)
library(dplyr)
library(plotly)
library(shiny)
library(shinythemes)
df <- read.csv('/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/data/cleaned-cdc-mortality-1999-2010-2.csv')
ui <- fluidPage(
theme=shinytheme('cyborg'),
# Application title
headerPanel('CDC Mortality 1999-2010'),
column(3,
selectInput('year', 'Year', unique(df$Year), selected='2010'),
selectInput('icd', 'ICD.Chapter', unique(df$ICD.Chapter), selected='Certain infectious and parasitic diseases'),
selectInput('state', 'State', unique(df$State), selected='NY')),
mainPanel(
plotlyOutput('plot1'),
br(),
plotlyOutput('plot2')
)
)
# Define server logic required to draw a histogram
server <- function(input, output, session) {
# Question 1: As a researcher, you frequently compare mortality rates from particular causes across
# different States. You need a visualization that will let you see (for 2010 only) the crude
# mortality rate, across all States, from one cause (for example, Neoplasms, which are
# effectively cancers). Create a visualization that allows you to rank States by crude mortality
# for each cause of death.
output$plot1 <- renderPlotly({
p1 <- df %>%
filter(Year == input$year, ICD.Chapter == input$icd) %>%
group_by(State) %>%
summarise(crude_rate=sum(Crude.Rate))
plot_ly(p1, x = ~State, y = ~crude_rate, type='bar') %>%
layout(title='Title', xaxis=list(categoryorder = "array", categoryarray = ~ reorder(crude_rate, State)))
})
# Question 2:
# Often you are asked whether particular States are improving their mortality rates (per cause)
# faster than, or slower than, the national average. Create a visualization that lets your clients
# see this for themselves for one cause of death at the time. Keep in mind that the national
# average should be weighted by the national population.
output$plot2 <- renderPlotly({
sdf <- df %>%
filter(State == input$state, ICD.Chapter == input$icd) %>%
group_by(Year) %>%
summarise(crude_rate=mean(Crude.Rate))
ndf <- df %>% group_by(Year) %>% summarise(national_avg=mean(Crude.Rate))
p2 <- cbind(sdf, ndf) %>% select(c('Year', 'crude_rate', 'national_avg'))
fig <- plot_ly(p2, x =~Year, y = ~crude_rate, name=paste0(input$state, 'Average'), type='scatter', mode='lines')
fig <- fig %>% add_trace(y = ~national_avg, name = 'National Average', mode = 'lines+markers')
})
}
# Run the application
shinyApp(ui = ui, server = server)
---
output: html_document
runtime: shiny
---
library(ggplot2)
library(dplyr)
library(plotly)
library(shiny)
library(shinythemes)
df <- read.csv('/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/data/cleaned-cdc-mortality-1999-2010-2.csv')
ui <- fluidPage(
theme=shinytheme('cyborg'),
# Application title
headerPanel('CDC Mortality 1999-2010'),
column(3,
selectInput('year', 'Year', unique(df$Year), selected='2010'),
selectInput('icd', 'ICD.Chapter', unique(df$ICD.Chapter), selected='Certain infectious and parasitic diseases'),
selectInput('state', 'State', unique(df$State), selected='NY')),
mainPanel(
plotlyOutput('plot1'),
br(),
plotlyOutput('plot2')
)
)
# Define server logic required to draw a histogram
server <- function(input, output, session) {
# Question 1: As a researcher, you frequently compare mortality rates from particular causes across
# different States. You need a visualization that will let you see (for 2010 only) the crude
# mortality rate, across all States, from one cause (for example, Neoplasms, which are
# effectively cancers). Create a visualization that allows you to rank States by crude mortality
# for each cause of death.
output$plot1 <- renderPlotly({
p1 <- df %>%
filter(Year == input$year, ICD.Chapter == input$icd) %>%
group_by(State) %>%
summarise(crude_rate=sum(Crude.Rate))
plot_ly(p1, x = ~reorder(State,crude_rate), y = ~crude_rate, type='bar') %>%
layout(title='Crude Mortality Rate vs State')
})
# Question 2:
# Often you are asked whether particular States are improving their mortality rates (per cause)
# faster than, or slower than, the national average. Create a visualization that lets your clients
# see this for themselves for one cause of death at the time. Keep in mind that the national
# average should be weighted by the national population.
output$plot2 <- renderPlotly({
sdf <- df %>%
filter(State == input$state, ICD.Chapter == input$icd) %>%
group_by(Year) %>%
summarise(crude_rate=mean(Crude.Rate))
ndf <- df %>% group_by(Year) %>% summarise(national_avg=mean(Crude.Rate))
p2 <- cbind(sdf, ndf) %>% select(c('Year', 'crude_rate', 'national_avg'))
fig <- plot_ly(p2, x =~Year, y = ~crude_rate, name=paste0(input$state, 'Average'), type='scatter', mode='lines')
fig <- fig %>% add_trace(y = ~national_avg, name = 'National Average', mode = 'lines+markers')
})
}
# Run the application
shinyApp(ui = ui, server = server)
install.packages("pandoc")
install.packages("rticles")
df <- read.csv('column_data.csv')
df <- read.csv('/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_698/column_data.csv')
df
df.shape
shape(df)
size(df)
df
head(df)
df
library(shiny)
install.packages('rsconnect')
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='ksooklall',
token='3490B7ECF8ADBF5B014503F417B809D8',
secret='<SECRET>')
)
rsconnect::setAccountInfo(name='ksooklall', token='3490B7ECF8ADBF5B014503F417B809D8', secret='Oji1HomPN7E52l8GNmxK/NU8RyR25FRLc0uoaWN+')
rsconnect::deployApp('/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/CDC/app.R')
rsconnect::deployApp('/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/CDC/')
rsconnect::deployApp('/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/CDC/')
library(rsconnect)
rsconnect::setAccountInfo(name='ksooklall', token='3490B7ECF8ADBF5B014503F417B809D8', secret='Oji1HomPN7E52l8GNmxK/NU8RyR25FRLc0uoaWN+')
rsconnect::deployApp('/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/CDC/')
rsconnect::deployApp('/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/CDC/')
library(rsconnect)
rsconnect::deployApp('/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/CDC/')
rsconnect::deployApp('/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/CDC/')
---
output: html_document
runtime: shiny
---
library(ggplot2)
library(dplyr)
library(plotly)
library(shiny)
library(shinythemes)
#/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/data/
df <- read.csv('cleaned-cdc-mortality-1999-2010-2.csv')
ui <- fluidPage(
theme=shinytheme('cyborg'),
# Application title
headerPanel('CDC Mortality 1999-2010'),
column(3,
selectInput('year', 'Year', unique(df$Year), selected='2010'),
selectInput('icd', 'ICD.Chapter', unique(df$ICD.Chapter), selected='Certain infectious and parasitic diseases'),
selectInput('state', 'State', unique(df$State), selected='NY')),
mainPanel(
plotlyOutput('plot1'),
br(),
plotlyOutput('plot2')
)
)
# Define server logic required to draw a histogram
server <- function(input, output, session) {
# Question 1: As a researcher, you frequently compare mortality rates from particular causes across
# different States. You need a visualization that will let you see (for 2010 only) the crude
# mortality rate, across all States, from one cause (for example, Neoplasms, which are
# effectively cancers). Create a visualization that allows you to rank States by crude mortality
# for each cause of death.
output$plot1 <- renderPlotly({
p1 <- df %>%
filter(Year == input$year, ICD.Chapter == input$icd) %>%
group_by(State) %>%
summarise(crude_rate=sum(Crude.Rate))
plot_ly(p1, x = ~reorder(State,crude_rate), y = ~crude_rate, type='bar') %>%
layout(title='Crude Mortality Rate vs State')
})
# Question 2:
# Often you are asked whether particular States are improving their mortality rates (per cause)
# faster than, or slower than, the national average. Create a visualization that lets your clients
# see this for themselves for one cause of death at the time. Keep in mind that the national
# average should be weighted by the national population.
output$plot2 <- renderPlotly({
sdf <- df %>%
filter(State == input$state, ICD.Chapter == input$icd) %>%
group_by(Year) %>%
summarise(crude_rate=mean(Crude.Rate))
ndf <- df %>% group_by(Year) %>% summarise(national_avg=mean(Crude.Rate))
p2 <- cbind(sdf, ndf) %>% select(c('Year', 'crude_rate', 'national_avg'))
fig <- plot_ly(p2, x =~Year, y = ~crude_rate, name=paste0(input$state, 'Average'), type='scatter', mode='lines')
fig <- fig %>% add_trace(y = ~national_avg, name = 'National Average', mode = 'lines+markers')
})
}
# Run the application
shinyApp(ui = ui, server = server)
runUrl()
---
output: html_document
runtime: shiny
---
library(ggplot2)
library(dplyr)
library(plotly)
library(shiny)
library(shinythemes)
#/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/data/
df <- read.csv('cleaned-cdc-mortality-1999-2010-2.csv')
ui <- fluidPage(
theme=shinytheme('cyborg'),
# Application title
headerPanel('CDC Mortality 1999-2010'),
column(3,
selectInput('year', 'Year', unique(df$Year), selected='2010'),
selectInput('icd', 'ICD.Chapter', unique(df$ICD.Chapter), selected='Certain infectious and parasitic diseases'),
selectInput('state', 'State', unique(df$State), selected='NY')),
mainPanel(
plotlyOutput('plot1'),
br(),
plotlyOutput('plot2')
)
)
# Define server logic required to draw a histogram
server <- function(input, output, session) {
# Question 1: As a researcher, you frequently compare mortality rates from particular causes across
# different States. You need a visualization that will let you see (for 2010 only) the crude
# mortality rate, across all States, from one cause (for example, Neoplasms, which are
# effectively cancers). Create a visualization that allows you to rank States by crude mortality
# for each cause of death.
output$plot1 <- renderPlotly({
p1 <- df %>%
filter(Year == input$year, ICD.Chapter == input$icd) %>%
group_by(State) %>%
summarise(crude_rate=sum(Crude.Rate))
plot_ly(p1, x = ~reorder(State,crude_rate), y = ~crude_rate, type='bar') %>%
layout(title='Crude Mortality Rate vs State')
})
# Question 2:
# Often you are asked whether particular States are improving their mortality rates (per cause)
# faster than, or slower than, the national average. Create a visualization that lets your clients
# see this for themselves for one cause of death at the time. Keep in mind that the national
# average should be weighted by the national population.
output$plot2 <- renderPlotly({
sdf <- df %>%
filter(State == input$state, ICD.Chapter == input$icd) %>%
group_by(Year) %>%
summarise(crude_rate=mean(Crude.Rate))
ndf <- df %>% group_by(Year) %>% summarise(national_avg=mean(Crude.Rate))
p2 <- cbind(sdf, ndf) %>% select(c('Year', 'crude_rate', 'national_avg'))
fig <- plot_ly(p2, x =~Year, y = ~crude_rate, name=paste0(input$state, 'Average'), type='scatter', mode='lines')
fig <- fig %>% add_trace(y = ~national_avg, name = 'National Average', mode = 'lines+markers')
})
}
# Run the application
shinyApp(ui = ui, server = server)
---
output: html_document
runtime: shiny
---
library(ggplot2)
library(dplyr)
library(plotly)
library(shiny)
library(shinythemes)
df <- read.csv('/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/CDC/cleaned-cdc-mortality-1999-2010-2.csv')
ui <- fluidPage(
theme=shinytheme('cyborg'),
# Application title
headerPanel('CDC Mortality 1999-2010'),
column(3,
selectInput('year', 'Year', unique(df$Year), selected='2010'),
selectInput('icd', 'ICD.Chapter', unique(df$ICD.Chapter), selected='Certain infectious and parasitic diseases'),
selectInput('state', 'State', unique(df$State), selected='NY')),
mainPanel(
plotlyOutput('plot1'),
br(),
plotlyOutput('plot2')
)
)
# Define server logic required to draw a histogram
server <- function(input, output, session) {
# Question 1: As a researcher, you frequently compare mortality rates from particular causes across
# different States. You need a visualization that will let you see (for 2010 only) the crude
# mortality rate, across all States, from one cause (for example, Neoplasms, which are
# effectively cancers). Create a visualization that allows you to rank States by crude mortality
# for each cause of death.
output$plot1 <- renderPlotly({
p1 <- df %>%
filter(Year == input$year, ICD.Chapter == input$icd) %>%
group_by(State) %>%
summarise(crude_rate=sum(Crude.Rate))
plot_ly(p1, x = ~reorder(State,crude_rate), y = ~crude_rate, type='bar') %>%
layout(title='Crude Mortality Rate vs State')
})
# Question 2:
# Often you are asked whether particular States are improving their mortality rates (per cause)
# faster than, or slower than, the national average. Create a visualization that lets your clients
# see this for themselves for one cause of death at the time. Keep in mind that the national
# average should be weighted by the national population.
output$plot2 <- renderPlotly({
sdf <- df %>%
filter(State == input$state, ICD.Chapter == input$icd) %>%
group_by(Year) %>%
summarise(crude_rate=mean(Crude.Rate))
ndf <- df %>% group_by(Year) %>% summarise(national_avg=mean(Crude.Rate))
p2 <- cbind(sdf, ndf) %>% select(c('Year', 'crude_rate', 'national_avg'))
fig <- plot_ly(p2, x =~Year, y = ~crude_rate, name=paste0(input$state, 'Average'), type='scatter', mode='lines')
fig <- fig %>% add_trace(y = ~national_avg, name = 'National Average', mode = 'lines+markers')
})
}
# Run the application
shinyApp(ui = ui, server = server)
library(rsconnect)
rsconnect::setAccountInfo(name='ksooklall', token='3490B7ECF8ADBF5B014503F417B809D8', secret='Oji1HomPN7E52l8GNmxK/NU8RyR25FRLc0uoaWN+')
rsconnect::deployApp('/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/CDC/')
rsconnect::deployApp(appName='myapp.R','/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/CDC/')
rsconnect::deployApp(appName='app.R')
rsconnect::deployApp(appName='app.R')
rsconnect::deployApp(appName='app.R', appDir = '/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/CDC')
rsconnect::deployApp(appName='mycdcapp.R', appDir = '/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/CDC')
deployApp()
setwd("~/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/CDC")
deployApp()
deployApp()
deployApp()
deployApp()
deployApp()
deployApp(appName = 'server.R')
deployApp(appName = 'server.R')
wd
wd()
deployApp()
setwd("~/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/cdcApp")
library(rsconnect)
rsconnect::setAccountInfo(name='ksooklall', token='3490B7ECF8ADBF5B014503F417B809D8', secret='Oji1HomPN7E52l8GNmxK/NU8RyR25FRLc0uoaWN+')
deployApp(appName='server', appDir = '/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/cdcApp')
deployApp(appName='server', appDir = '/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/cdcApp')
deployApp(appName='app', appDir = '/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/cdcApp')
deployApp(appName='app.R', appDir = '/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/cdcApp')
deployApp(appName='app.R', appDir = '/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/cdcApp')
deployApp(appName='myapp.R', appDir = '/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/cdcApp')
---
output: html_document
runtime: shiny
---
library(ggplot2)
library(dplyr)
library(plotly)
library(shiny)
library(shinythemes)
#'/home/kenan/Documents/learning/masters/CUNY-SPS-Masters-DS/DATA_608/module3/CDC/
df <- read.csv('https://raw.githubusercontent.com/ksooklall/CUNY-SPS-Masters-DS/main/DATA_608/module3/cdcApp/cleaned-cdc-mortality-1999-2010-2.csv')
ui <- fluidPage(
theme=shinytheme('cyborg'),
# Application title
headerPanel('CDC Mortality 1999-2010'),
column(3,
selectInput('year', 'Year', unique(df$Year), selected='2010'),
selectInput('icd', 'ICD.Chapter', unique(df$ICD.Chapter), selected='Certain infectious and parasitic diseases'),
selectInput('state', 'State', unique(df$State), selected='NY')),
mainPanel(
plotlyOutput('plot1'),
br(),
plotlyOutput('plot2')
)
)
# Define server logic required to draw a histogram
server <- function(input, output, session) {
# Question 1: As a researcher, you frequently compare mortality rates from particular causes across
# different States. You need a visualization that will let you see (for 2010 only) the crude
# mortality rate, across all States, from one cause (for example, Neoplasms, which are
# effectively cancers). Create a visualization that allows you to rank States by crude mortality
# for each cause of death.
output$plot1 <- renderPlotly({
p1 <- df %>%
filter(Year == input$year, ICD.Chapter == input$icd) %>%
group_by(State) %>%
summarise(crude_rate=sum(Crude.Rate))
plot_ly(p1, x = ~reorder(State,crude_rate), y = ~crude_rate, type='bar') %>%
layout(title='Crude Mortality Rate vs State')
})
# Question 2:
# Often you are asked whether particular States are improving their mortality rates (per cause)
# faster than, or slower than, the national average. Create a visualization that lets your clients
# see this for themselves for one cause of death at the time. Keep in mind that the national
# average should be weighted by the national population.
output$plot2 <- renderPlotly({
sdf <- df %>%
filter(State == input$state, ICD.Chapter == input$icd) %>%
group_by(Year) %>%
summarise(crude_rate=mean(Crude.Rate))
ndf <- df %>% group_by(Year) %>% summarise(national_avg=mean(Crude.Rate))
p2 <- cbind(sdf, ndf) %>% select(c('Year', 'crude_rate', 'national_avg'))
fig <- plot_ly(p2, x =~Year, y = ~crude_rate, name=paste0(input$state, 'Average'), type='scatter', mode='lines')
fig <- fig %>% add_trace(y = ~national_avg, name = 'National Average', mode = 'lines+markers')
})
}
# Run the application
shinyApp(ui = ui, server = server)
